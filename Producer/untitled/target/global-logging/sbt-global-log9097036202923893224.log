[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\USER\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\USER\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 17.0.4.1)
[debug]       Load.loadUnit: plugins took 282.5197ms
[debug]       Load.loadUnit: defsScala took 3.5048ms
[debug] [Loading] Scanning directory C:\Users\USER\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\USER\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 53.9725 ms
[debug]           Load.resolveProject(global-plugins) took 85.9754ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\USER\.sbt\1.0\plugins, plugins: List(<none>))) took 223.6086ms
[debug] [Loading] Done in C:\Users\USER\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 325.8823ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3277ms
[debug]     Load.loadUnit(file:/C:/Users/USER/.sbt/1.0/plugins/, ...) took 639.4722ms
[debug]   Load.apply: load took 916.778ms
[debug]   Load.apply: resolveProjects took 7.5166ms
[debug]   Load.apply: finalTransforms took 79.5478ms
[debug]   Load.apply: config.delegates took 12.863ms
[debug]   Load.apply: Def.make(settings)... took 536.0977ms
[debug]   Load.apply: structureIndex took 136.1917ms
[debug]   Load.apply: mkStreams took 2.832ms
[info] loading global plugins from C:\Users\USER\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5808.7259ms
[debug]           Load.loadUnit: plugins took 34.2668ms
[debug]           Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory D:\Big_Data_Engineering\OnlineRetail\untitled\project
[debug]             Load.loadUnit: mkEval took 5.436ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Big_Data_Engineering\OnlineRetail\untitled\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4853 ms
[info] loading settings for project untitled-build from idea.sbt ...
[debug]               Load.resolveProject(untitled-build) took 3.6251ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled-build, base: D:\Big_Data_Engineering\OnlineRetail\untitled\project, plugins: List(<none>))) took 6.7689ms
[debug] [Loading] Done in D:\Big_Data_Engineering\OnlineRetail\untitled\project, returning: (untitled-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2488.7772ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.3764ms
[debug]         Load.loadUnit(file:/D:/Big_Data_Engineering/OnlineRetail/untitled/project/, ...) took 2531.56ms
[debug]       Load.apply: load took 2533.3507ms
[debug]       Load.apply: resolveProjects took 0.1335ms
[debug]       Load.apply: finalTransforms took 20.6853ms
[debug]       Load.apply: config.delegates took 0.5252ms
[debug]       Load.apply: Def.make(settings)... took 131.72ms
[debug]       Load.apply: structureIndex took 41.4183ms
[debug]       Load.apply: mkStreams took 0.0024ms
[info] loading project definition from D:\Big_Data_Engineering\OnlineRetail\untitled\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4285.5579ms
[debug]     Load.loadUnit: defsScala took 0.011ms
[debug] [Loading] Scanning directory D:\Big_Data_Engineering\OnlineRetail\untitled
[debug]       Load.loadUnit: mkEval took 0.373ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0888 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 40.0884ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Big_Data_Engineering\OnlineRetail\untitled, plugins: List(<none>))) took 43.947ms
[debug] [Loading] Done in D:\Big_Data_Engineering\OnlineRetail\untitled, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2172.5956ms
[debug]     Load.loadUnit: cleanEvalClasses took 28.9495ms
[debug]   Load.loadUnit(file:/D:/Big_Data_Engineering/OnlineRetail/untitled/, ...) took 6488.4263ms
[debug] Load.apply: load took 6490.2655ms
[debug] Load.apply: resolveProjects took 0.1393ms
[debug] Load.apply: finalTransforms took 39.1497ms
[debug] Load.apply: config.delegates took 0.4532ms
[debug] Load.apply: Def.make(settings)... took 71.3853ms
[debug] Load.apply: structureIndex took 24.7566ms
[debug] Load.apply: mkStreams took 0.0018ms
[info] set current project to OnlineRetail (in build file:/D:/Big_Data_Engineering/OnlineRetail/untitled/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53320 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53320, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to OnlineRetail (in build file:/D:/Big_Data_Engineering/OnlineRetail/untitled/)
[debug] > Exec(idea-shell, None, None)
